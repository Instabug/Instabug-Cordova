version: 2
jobs:
  android_tests:
    working_directory: ~/project
    macos:
      xcode: "9.4.0"
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/project
      - restore_cache:
          keys: 
            - android_cache
      - run:
          name: Setup environment variables
          command: |
            echo 'export PATH="$PATH:/usr/local/opt/node@8/bin:${HOME}/.yarn/bin:${HOME}/${CIRCLE_PROJECT_REPONAME}/node_modules/.bin:/usr/local/share/android-sdk/tools/bin"' >> $BASH_ENV
            echo 'export ANDROID_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_HOME="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"' >> $BASH_ENV
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export JAVA_HOME=/Library/Java/Home' >> $BASH_ENV
            echo 'export PATH="$PATH:`pwd`/flutter/bin"'  >> $BASH_ENV
      - run:
          name: Install Android sdk
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Install emulator dependencies
          command: (yes | sdkmanager "platform-tools" "platforms;android-26" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;26.0.0" "system-images;android-26;google_apis;x86" "emulator" --verbose) || true
      - run: avdmanager create avd -n Pixel_2_API_26 -k "system-images;android-26;google_apis;x86" -g google_apis -d "Nexus 5"
      - run:
          name: Run emulator in background
          command: /usr/local/share/android-sdk/tools/emulator @Pixel_2_API_26 -noaudio -no-boot-anim -no-window
          background: true
      - run:
          name: download Cordova 
          command: npm install -g cordova
      - run:
          name: Copy sampleApp
          command: cp -a sampleApp ../
      - run:
          name: chmod permissions
          command: cd ../; chmod -R 777 sampleApp
      - run: 
          name: Npm Install
          command: cd ../sampleApp; npm install
      - run: 
          name: Add Instabug
          command: cd ../sampleApp; cordova plugin add ../project
      - run: 
          name: Build App
          command: cd ../sampleApp; cordova build
      - run:
          name: Download Android Dependencies
          command: cd ../sampleApp/platforms/android; ./gradlew androidDependencies
      - run:
          name: Run UI Tests
          command: cd ../sampleApp/platforms/android; ./gradlew app:connectedAndroidTest

  publish:
    macos:
      xcode: "10.1.0"
    steps:
      - checkout
      - run: git clone https://InstabugCI:$RELEASE_GITHUB_TOKEN@github.com/Instabug/Escape.git
      - run: cd Escape; swift build -c release -Xswiftc -static-stdlib
      - run: cd Escape/.build/release; cp -f Escape /usr/local/bin/escape
      - run: Escape cordova publish
workflows:
  version: 2
  publish:
    jobs:
      - android_tests
      - hold:
          type: approval
          requires:
            - android_tests
          filters:
            branches:
              only: master
      - publish:
          requires:
            - hold
          filters:
            branches:
              only: master

